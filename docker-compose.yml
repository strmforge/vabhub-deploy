version: '3.8'

services:
  vabhub:
    stdin_open: true
    tty: true
    container_name: vabhub
    hostname: vabhub
    ports:
     - '3001:3001'  # 前端端口
     - '3002:3002'  # 后端API端口
    volumes:
      - '/media:/media'  # 媒体文件挂载
      - '/vabhub/config:/config'  # 持久化配置（不包含API密钥）
      - '/vabhub/data:/data'  # 应用数据
      - '/var/run/docker.sock:/var/run/docker.sock:ro'  # Docker管理权限
    environment:
      # 基础配置（不包含敏感信息）
      - 'VABHUB_ENV=production'
      - 'API_HOST=0.0.0.0'
      - 'API_PORT=3002'
      - 'FRONTEND_PORT=3001'
      - 'PUID=0'
      - 'PGID=0'
      - 'UMASK=000'
      - 'TZ=Asia/Shanghai'
      
      # 数据库配置
      - 'DB_TYPE=postgresql'
      - 'DB_POSTGRESQL_HOST=postgresql'
      - 'DB_POSTGRESQL_PORT=5432'
      - 'DB_POSTGRESQL_DATABASE=vabhub'
      - 'DB_POSTGRESQL_USERNAME=vabhub'
      - 'DB_POSTGRESQL_PASSWORD=${DB_PASSWORD:-vabhub123}'
      
      # Redis配置
      - 'CACHE_BACKEND_TYPE=redis'
      - 'CACHE_BACKEND_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379'
      
      # 敏感API密钥通过环境变量注入（不在配置中硬编码）
      - 'U115_APP_ID=${U115_APP_ID:-100197729}'
      - 'U115_APP_KEY=${U115_APP_KEY:-d099625d59aba2a79e70b81fc4589b26}'
      
      # 管理员配置
      - 'SUPERUSER=admin'
      - 'SUPERUSER_PASSWORD=${ADMIN_PASSWORD:-admin123}'
    
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    # 使用预编译的Docker镜像（API密钥硬编码但受编译保护）
    image: vabhub/app:latest
    build:
      context: .
      dockerfile: Dockerfile

  redis:
    container_name: vabhub-redis
    volumes:
      - '/vabhub/redis/data:/data'
    image: redis:7-alpine
    command: redis-server --save 600 1 --requirepass ${REDIS_PASSWORD:-redis123}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  postgresql:
    container_name: vabhub-postgres
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: vabhub
      POSTGRES_USER: vabhub
      POSTGRES_PASSWORD: ${DB_PASSWORD:-vabhub123}
    volumes:
      - '/vabhub/postgresql/data:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vabhub -d vabhub"]
      interval: 10s
      timeout: 5s
      retries: 5

# 网络配置
networks:
  default:
    name: vabhub-network