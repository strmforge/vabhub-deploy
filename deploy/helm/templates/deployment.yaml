apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "media-renamer.fullname" . }}
  labels:
    {{- include "media-renamer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "media-renamer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "media-renamer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APP_ENV
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Values.postgresql.fullnameOverride | default (printf "%s-%s" .Release.Name "postgresql") }}:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.fullnameOverride | default (printf "%s-%s" .Release.Name "redis") }}-master:6379/0"
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: data
              mountPath: /app/data
            - name: logs
              mountPath: /app/logs
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "media-renamer.fullname" . }}-config
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "media-renamer.fullname" . }}-data
        - name: logs
          emptyDir: {}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}